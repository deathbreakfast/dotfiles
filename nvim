" ======================
" Basic Configuration
" ======================

set number relativenumber
set colorcolumn=99,100
set scrolloff=10

hi FgCocErrorFloatBgCocFloating ctermfg=15 ctermbg=1 guifg=White guibg=Red
hi Pmenu ctermbg=242 guibg=DarkGrey

filetype plugin on

" Select word
noremap <space> viw

" Split on `\` + `v`
noremap <leader>v :vsplit<CR>
noremap <S-h> <C-w>h 
noremap <S-l> <C-w>l

" Select inner word and paste
noremap <S-p> viwpviwy
noremap <S-y> viwy

" ======================
" Package Manager
" ======================

call plug#begin('~/.vim/plugged')

" =============
" Plugins here
" =============

Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'rust-lang/rust.vim'
Plug 'iamcco/coc-spell-checker'
Plug 'cloudhead/neovim-fuzzy'

" Readme viewer `:MarkdownPreview` to start and `"MarkdownPreviewStop` to stop
Plug 'iamcco/markdown-preview.nvim', { 'do': { -> mkdp#util#install() }, 'for': ['markdown', 'vim-plug']}


" =============
" End of Plugins
" =============
" Plugin Configuration
" =============

" coc.nvim Enter to select when nothing is highlighted
inoremap <silent><expr> <cr> pumvisible() ? coc#_select_confirm() : "\<C-g>u\<CR>"
" tab to navigate the completion list
inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
" Shift tab to navigate the completion list backwards
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
"
" Code formatting on save
augroup mygroup
  autocmd!
  " Setup formatexpr specified filetype(s).
  autocmd FileType typescript,json,rs setl formatexpr=CocAction('formatSelected')
  " Update signature help on jump placeholder.
  autocmd User CocJumpPlaceholder call CocActionAsync('showSignatureHelp')
augroup end
let g:rustfmt_autosave = 1

" Coc Spell check. Map to `\` + `a` when selected
vmap <leader>a <Plug>(coc-codeaction-selected)
nmap <leader>a <Plug>(coc-codeaction-selected)

" Coc Jump to definition on `\a` + `e`
noremap <leader>o :call CocAction('jumpDefinition', 'vsplit')<CR>

" Fuzzy filesearch and grep
noremap <leader>e :FuzzyOpen<CR>
noremap <leader>f :FuzzyGrep<CR>

call plug#end()

" ======================
" End of Package Manager
" ======================
